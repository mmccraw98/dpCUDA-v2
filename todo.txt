STEPS TO BUILD ON SLURM SERVER:

salloc -p gpu_devel --gres=gpu:1 --mem=8G -t 4:00:00

module purge
module load GCC/10.2.0
module load CUDA/11.8.0
module load CMake/3.18.4-GCCcore-10.2.0

# downloaded nlohmann json locally and compiled it

# change the cmake to the grace_cmake file, make sure the gpu architecture is set to match the gpu you are using
# gpu devel uses a5000, gpu uses some rtx nonsense, there are others that use a100s and whatnot
# "75;80;86;89;90" gives mostly full coverage but takes a while to compile

cd /home/mrm252/project/dpCUDA2/dpCUDA-v2
rm -rf build
mkdir build && cd build

cmake \
  -DCMAKE_PREFIX_PATH=/home/mrm252/project/dpCUDA2/nlohmann_json/install \
  -DCMAKE_CXX_COMPILER=$(which g++) \
  -DCMAKE_CUDA_COMPILER=$(which nvcc) \
  -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-11.8 \
  ..

make -j1 VERBOSE=1


- refactor dptools / roll in dptools into dpCUDA
- make a readme with changes
- speed up cell list binary search
- refactor data arrays
  - add io
  - add name
- refine dependency calculations
- refine io
- figure out how best to lay out the grid, thread, and block dimensions
- make tests
- replica mode
- try to go back to crtp classes for the particles and integrators

mkdir -p build
cd build
cmake ..
make
./main_exec

